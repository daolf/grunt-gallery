[{"name":"app","file":"./js/comp/app.js","example":["new Ext.SplitButton({\nrenderTo: 'button-ct', // the container id\ntext: 'Options',\nmenu: new Ext.menu.Menu({\nitems: [\n// these items will render as dropdown menu items when the arrow is clicked:\n{text: 'Item 1'},\n{text: 'Item 2'}\n]\n})\n});"]},{"name":"app2","file":"./js/comp/app2.js","example":["new Ext.SplitButton({\nrenderTo: 'button-ct', // the container id\ntext: 'Options',\nmenu: new Ext.menu.Menu({\nitems: [\n// these items will render as dropdown menu items when the arrow is clicked:\n{text: 'Item 1'},\n{text: 'Item 2'}\n]\n})\n});"]},{"name":"app3","file":"./js/comp/app3.js","example":["new Ext.SplitButton({\nrenderTo: 'button-ct', // the container id\ntext: 'Options',\nmenu: new Ext.menu.Menu({\nitems: [\n// these items will render as dropdown menu items when the arrow is clicked:\n{text: 'Item 1'},\n{text: 'Item 2'}\n]\n})\n});"]},{"name":"app4","file":"./js/comp/app4.js","example":["new Ext.SplitButton({\nrenderTo: 'button-ct', // the container id\ntext: 'Options',\nmenu: new Ext.menu.Menu({\nitems: [\n// these items will render as dropdown menu items when the arrow is clicked:\n{text: 'Item 1'},\n{text: 'Item 2'}\n]\n})\n});"]},{"name":"app5","file":"./js/comp/app5.js","example":["new Ext.SplitButton({\nrenderTo: 'button-ct', // the container id\ntext: 'Options',\nmenu: new Ext.menu.Menu({\nitems: [\n// these items will render as dropdown menu items when the arrow is clicked:\n{text: 'Item 1'},\n{text: 'Item 2'}\n]\n})\n});"]},{"name":"ButtonGroup","file":"./js/comp/ButtonGroup.js","example":["var p = new Ext.Panel({\ntitle: 'Panel with Button Group',\nwidth: 300,\nheight:200,\nrenderTo: document.body,\nhtml: 'whatever',\ntbar: [{\nxtype: 'buttongroup',\ntitle: 'Clipboard',\nitems: [{\ntext: 'Paste',\nscale: 'large',\nrowspan: 3, iconCls: 'add',\niconAlign: 'top',\ncls: 'x-btn-as-arrow'\n},{\nxtype:'splitbutton',\ntext: 'Menu Button',\nscale: 'large',\nrowspan: 3,\niconCls: 'add',\niconAlign: 'top',\narrowAlign:'bottom',\nmenu: [{text: 'Menu Item 1'}]\n},{\nxtype:'splitbutton', text: 'Cut', iconCls: 'add16', menu: [{text: 'Cut Menu Item'}]\n},{\ntext: 'Copy', iconCls: 'add16'\n},{\ntext: 'Format', iconCls: 'add16'\n}]\n}]\n});"]},{"name":"ColorPalette","file":"./js/comp/ColorPalette.js","example":["var cp = new Ext.ColorPalette({value:'993300'});  // initial selected color\ncp.render(Ext.getBody());"]},{"name":"CycleButton","file":"./js/comp/CycleButton.js","example":["var btn = new Ext.CycleButton({\nshowText: true,\nprependText: 'View as ',\nrenderTo: document.body,\nitems: [{\ntext:'text only',\niconCls:'view-text',\nchecked:true\n},{\ntext:'HTML',\niconCls:'view-html'\n}],\nchangeHandler:function(btn, item){\nExt.Msg.alert('Change View', item.text);\n}\n});\nbtn.show();"]},{"name":"DataView","file":"./js/comp/DataView.js","example":["var store = new Ext.data.ArrayStore({\nfields: ['fullname', 'first'],\nidIndex: 0 // id for each record will be the first element\n});\nvar tpl = new Ext.XTemplate(\n'&lt;tpl for=\".\"&gt;',\n'&lt;div class=\"thumb-wrap\" id=\"{name}\"&gt;',\n'&lt;div class=\"thumb\"&gt;&lt;img src=\"{url}\" title=\"{name}\"&gt;&lt;/div&gt;',\n'&lt;span class=\"x-editable\"&gt;{shortName}&lt;/span&gt;&lt;/div&gt;',\n'&lt;/tpl&gt;',\n'&lt;div class=\"x-clear\"&gt;&lt;/div&gt;'\n);\nvar panel = new Ext.Panel({\nid:'images-view',\nframe:true,\nwidth:535,\nautoHeight:true,\ncollapsible:true,\nlayout:'fit',\ntitle:'Simple DataView',\nitems: new Ext.DataView({\nstore: store,\ntpl: tpl,\nautoHeight:true,\nmultiSelect: true,\noverClass:'x-view-over',\nitemSelector:'div.thumb-wrap',\nemptyText: 'No images to display'\n})\n});\npanel.render(document.body);"]},{"name":"Lyra","file":"./js/comp/Lyra.Window.js","example":["var myLyraWin = new Lyra.Window({\nrenderTo: Ext.getBody(),\nwidth: 400,\nheight: 300,\nitems: [\n{  width: '100%',\nheight: '100%',\ntitle: 'Container Panel',\nxtype:'panel'}\n]\n});\nmyLyraWin.show();"]},{"name":"Panel","file":"./js/comp/Panel.js","example":["new Ext.Panel({\ntitle: 'Message Title',\nrenderTo: Ext.getBody(),\nwidth: 200, height: 130,\nbodyCfg: {\ntag: 'center',\ncls: 'x-panel-body',  // Default class not applied if Custom element specified\nhtml: 'Message'\n},\nfooterCfg: {\ntag: 'h2',\ncls: 'x-panel-footer',        // same as the Default class\nhtml: 'footer html'\n},\nfooterCssClass: 'custom-footer', // additional css class, see\nfooterStyle:    'background-color:red' // see\n});"]},{"name":"SplitButton","file":"./js/comp/SplitButton.js","example":["new Ext.SplitButton({\nrenderTo: 'button-ct', // the container id\ntext: 'Options',\nmenu: new Ext.menu.Menu({\nitems: [\n// these items will render as dropdown menu items when the arrow is clicked:\n{text: 'Item 1'},\n{text: 'Item 2'}\n]\n})\n});"]},{"name":"TabPanel","file":"./js/comp/TabPanel.js","example":["var tabs = new Ext.TabPanel({\nrenderTo: Ext.getBody(),\nactiveTab: 0,\nitems: [{\ntitle: 'Tab 1',\nhtml: 'A simple tab'\n},{\ntitle: 'Tab 2',\nhtml: 'Another one'\n}]\n});\ntabs.show();"]},{"name":"Toolbar","file":"./js/comp/Toolbar.js","example":["var tb = new Ext.Toolbar({\nrenderTo: document.body,\nwidth: 600,\nheight: 100,\nitems: [\n{\n// xtype: 'button', // default for Toolbars, same as 'tbbutton'\ntext: 'Button'\n},\n{\nxtype: 'splitbutton', // same as 'tbsplitbutton'\ntext: 'Split Button'\n},\n// begin using the right-justified button container\n'->', // same as {xtype: 'tbfill'}, // Ext.Toolbar.Fill\n{\nxtype: 'textfield',\nname: 'field1',\nemptyText: 'enter search term'\n},\n// add a vertical separator bar between toolbar items\n'-', // same as {xtype: 'tbseparator'} to create Ext.Toolbar.Separator\n'text 1', // same as {xtype: 'tbtext', text: 'text1'} to create Ext.Toolbar.TextItem\n{xtype: 'tbspacer'},// same as ' ' to create Ext.Toolbar.Spacer\n'text 2',\n{xtype: 'tbspacer', width: 50}, // add a 50px space\n'text 3'\n]\n});"]},{"name":"Viewport","file":"./js/comp/Viewport.js","example":["new Ext.Viewport({\nlayout: 'border',\nitems: [{\nregion: 'north',\nautoHeight: true,\nborder: false,\nmargins: '0 0 5 0'\n}, {\nregion: 'west',\ncollapsible: true,\ntitle: 'Navigation',\nwidth: 200\n}, {\nregion: 'south',\ntitle: 'Title for Panel',\ncollapsible: true,\nhtml: 'Information goes here',\nsplit: true,\nheight: 100,\nminHeight: 100\n}, {\nregion: 'east',\ntitle: 'Title for the Grid Panel',\ncollapsible: true,\nsplit: true,\nwidth: 200,\n// remaining grid configuration not shown ...\n// notice that the GridPanel is added directly as the region\n// it is not \"overnested\" inside another Panel\n}, {\nregion: 'center',\nxtype: 'tabpanel', // TabPanel itself has no title\nitems: {\ntitle: 'Default Tab',\nhtml: 'The first tab\\'s content. Others may be added dynamically'\n}\n}]\n});"]}]